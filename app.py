import streamlit as st
import pandas as pd
import psycopg
from psycopg.rows import dict_row

st.title("üìä –ú–æ–∏—Ç–µ —Ç–∞–±–ª–∏—Ü–∏ –æ—Ç Supabase")

# --- –í—Ä—ä–∑–∫–∞ –∫—ä–º Supabase ---
db = st.secrets["connections"]["supabase"]

conn = psycopg.connect(
    host=db["host"],
    dbname=db["dbname"],
    user=db["user"],
    password=db["password"],
    port=int(db.get("port", 5432)),
    sslmode=db.get("sslmode", "require"),
    row_factory=dict_row
)

# --- –ü–æ–∫–∞–∂–∏ –≤—Å–∏—á–∫–∏ —Å—Ö–µ–º–∏ –∑–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ ---
with conn.cursor() as cur:
    cur.execute("SELECT schema_name FROM information_schema.schemata ORDER BY schema_name;")
    schemas = [r["schema_name"] for r in cur.fetchall()]
st.write("üîç –ù–∞–º–µ—Ä–µ–Ω–∏ —Å—Ö–µ–º–∏ –≤ –±–∞–∑–∞—Ç–∞:", schemas)

# --- –ü–æ–∫–∞–∂–∏ –≤—Å–∏—á–∫–∏ —Ç–∞–±–ª–∏—Ü–∏ –æ—Ç schema = 'kg' ---
with conn.cursor() as cur:
    cur.execute("""
        SELECT table_schema, table_name
        FROM information_schema.tables
        WHERE table_schema NOT IN ('pg_catalog', 'information_schema')
        ORDER BY table_schema, table_name;
    """)
    all_tables = cur.fetchall()

st.write("üìã –í—Å–∏—á–∫–∏ —Ç–∞–±–ª–∏—Ü–∏, –∫–æ–∏—Ç–æ –≤–∏–∂–¥–∞–º:", all_tables)

# --- –ê–∫–æ –∏–º–∞ —Ç–∞–±–ª–∏—Ü–∏ –≤ kg, –ø–æ–∫–∞–∂–∏ –¥–∞–Ω–Ω–∏ ---
kg_tables = [t["table_name"] for t in all_tables if t["table_schema"] == "kg"]

if not kg_tables:
    st.warning("‚ùó –ù–µ –Ω–∞–º–µ—Ä–∏—Ö —Ç–∞–±–ª–∏—Ü–∏ –≤ schema 'kg'. –ü—Ä–æ–≤–µ—Ä–µ—Ç–µ –∏–º–µ—Ç–æ –Ω–∞ —Å—Ö–µ–º–∞—Ç–∞.")
else:
    table_choice = st.sidebar.selectbox("–ò–∑–±–µ—Ä–∏ —Ç–∞–±–ª–∏—Ü–∞", kg_tables)
    query = f'SELECT * FROM kg."{table_choice}" LIMIT 100;'
    df = pd.read_sql(query, conn)
    st.subheader(f"–¢–∞–±–ª–∏—Ü–∞: {table_choice}")
    st.dataframe(df)
